# Data

```{r, echo = FALSE, message = FALSE}
source(here::here("scripts/setup.R"))
```
__TO DO's__

<<<<<<< HEAD
* Sources

 https://www.bfs.admin.ch/bfs/en/home/statistics/catalogues-databases/data.assetdetail.24105892.html

* Description

 New registrations of road vehicles by vehicle group and type
 Results by canton, vehicle group, vehicle type, fuel, month and year

* Wrangling/cleaning

* Spotting mistakes and missing data (could be part of EDA too)
* Listing anomalies and outliers (could be part of EDA too) 

=======
* Sources - TBS
* Description - In progress
* Wrangling/cleaning - In progress
* Spotting mistakes and missing data (could be part of EDA too) - TBD
* Listing anomalies and outliers (could be part of EDA too) - TBD


## Description

The datasets encompass:

- **Vehicle Registrations**: Detailed regional breakdowns showing vehicle type, fuel type, and numbers across years.
- **Google Trends**: Time-series data showcasing the interest in electric vehicles and environmental topics over time.
- **Oil Prices**: Time-series data indicating Brent oil price fluctuations over the years.
- **Demographics**: Indicators like population growth, immigration, emigration, gender statistics, and more, which can influence vehicle adoption patterns.

## Wrangling/Cleaning

### cleaning of road_vehicle_CH_2005-2008.csv
```{r}
# Reading the data
vehicle_data_2005_2008 <- read.csv("../data/road_vehicle_CH_2005-2008.csv")
vehicle_data_2009_2022 <- read.csv("../data/road_vehicle_CH_2009-2022.csv")
google_trends_data <- read.csv("../data/google_trend_EV_2004-2023.csv")
oil_prices_data <- read.csv("../data/BrentOilPrices.csv")
demographic_data <- read.csv("../data/demographic.csv")
```

```{r}
# Storing the data frames in a list
datasets <- list(vehicle_data_2005_2008 = vehicle_data_2005_2008,
                 vehicle_data_2009_2022 = vehicle_data_2009_2022,
                 google_trends_data = google_trends_data,
                 oil_prices_data = oil_prices_data,
                 demographic_data = demographic_data)

# Iterating over the list and printing the head of each data frame
for (i in names(datasets)) {
  cat(paste("\nFirst few rows of dataset:", i, "\n"))
  print(head(datasets[[i]]))
  print(str(datasets[[i]]))
}
```

```{r}
# Reshape the dataset from wide to long format
v_2005_2008 <- vehicle_data_2005_2008 |>
  pivot_longer(cols = `X2005`:`X2008`, names_to = "Year", values_to = "Count")

head(v_2005_2008)
```
```{r}
# Remove the "X" prefix from the Year column
v_2005_2008$Year <- gsub("X", "", v_2005_2008$Year)

# Display the cleaned dataset again
head(v_2005_2008)
```

```{r}
#work on Vehicle.group...type
v_2005_2008 <- v_2005_2008 |>
  # Create Category column based on rows starting with '>'
  mutate(Category = ifelse(str_starts(Vehicle.group...type, ">"), Vehicle.group...type, NA)) |>
  # Fill down the Category values
  fill(Category) |>
  # Remove the prefixes from both Category and Type columns
  mutate(
    Category = str_remove(Category, "^>\\s*"),
    Sub_category = str_remove(Vehicle.group...type, "^\\.\\.\\.\\s*|>\\s*")
  ) |>
  # Drop the original Type column
  select(-Vehicle.group...type)

head(v_2005_2008)
```

```{r}
# Rename columns
v_2005_2008 <- v_2005_2008 |>
  rename(
    Location = Canton,
    Fuel = Fuel
  )

head(v_2005_2008)
```
```{r}
vehicle_data_2005_2008
```

```{r}
#check if same sum()
total_sum_new_df <- sum(v_2005_2008$Count)
total_sum_old_df <- sum(colSums(vehicle_data_2005_2008[, c('X2005', 'X2006', 'X2007', 'X2008')]))

total_sum_new_df
total_sum_old_df
```
### Cleaning of road_vehicle_CH_2009-2022.csv

```{r}
# Reshape the dataset from wide to long format
v_2009_2022 <- vehicle_data_2009_2022 |>
  pivot_longer(cols = `X2009`:`X2022`, names_to = "Year", values_to = "Count")

# Remove the "X" prefix from the Year column
v_2009_2022$Year <- gsub("X", "", v_2009_2022$Year)

#work on Vehicle.group...type
v_2009_2022 <- v_2009_2022 |>
  # Create Category column based on rows starting with '>'
  mutate(Category = ifelse(str_starts(Vehicle.group...type, ">"), Vehicle.group...type, NA)) |>
  # Fill down the Category values
  fill(Category) |>
  # Remove the prefixes from both Category and Type columns
  mutate(
    Category = str_remove(Category, "^>\\s*"),
    Sub_category = str_remove(Vehicle.group...type, "^\\.\\.\\.\\s*|>\\s*")
  ) |>
  # Drop the original Type column
  select(-Vehicle.group...type)

# Rename columns
v_2009_2022 <- v_2009_2022 |>
  rename(
    Location = Canton,
    Fuel = Fuel
  )

head(v_2009_2022)
```
```{r}
#check if same sum()
total_sum_new_df2 <- sum(v_2009_2022$Count)
total_sum_old_df2 <- sum(colSums(vehicle_data_2009_2022[, c('X2009', 'X2010', 'X2011', 'X2012', 'X2013', 'X2014', 'X2015', 'X2016', 'X2017', 'X2018', 'X2019', 'X2020', 'X2021', 'X2022')]))

total_sum_new_df2
total_sum_old_df2
```
- **Merging and Joining**: As the vehicle data was split across multiple files, it was necessary to combine them for a holistic view.

```{r}
df_v <- bind_rows(v_2005_2008, v_2009_2022)
df_v
```
```{r}
total_sum_new_df + total_sum_new_df2
sum(df_v$Count)

```
```{r}
df_v <- df_v |>
  arrange(df_v$Year)
```
```{r}
str(df_v)
unique(df_v$Year)
unique(df_v$Location)
```

- **Handling Missing Values**: Some datasets contained missing values which were either filled using appropriate imputation methods or dropped based on their significance.
- **Data Type Conversions**: Ensuring that all data columns were of the correct type (e.g., converting date strings to date objects).



## Spotting Mistakes and Missing Data

## Listing Anomalies and Outliers
>>>>>>> ab79adeb9376107b0d09e7630f5af95317bcd61d
